service cloud.firestore {
  match /databases/{database}/documents {
      function isSignedIn() {
        return request.auth != null;
      }
    match /users/{user} {
      allow read: if true;
    }
    match /leagues/{league} {

      function isOwner() {
        return resource.data.uid == request.auth.uid;
      }

      function correctUser() {
        return request.resource.data.uid == request.auth.uid;
      }

      allow create: if isSignedIn() && correctUser();
      allow delete: if isSignedIn() && isOwner();
      allow update: if isSignedIn() && isOwner();
      allow read: if true;

      function ownsLeague() {
        return get(/databases/$(database)/documents/leagues/$(league)).data.uid == request.auth.uid;
      }

      match /players/{player} {
        function validatePlayerData() {
          return true;
          //return request.resource.data.keys().hasAll(['score', 'name']) && request.resource.data.score is int && request.resource.data.name is string;
        }

        allow create: if isSignedIn() && ownsLeague() && validatePlayerData();
        allow delete: if isSignedIn() && ownsLeague();
        allow update: if isSignedIn() && ownsLeague();
        allow read: if true;
      }

      match /matches/{matchId} {
        function validateMatchData() {
          return request.resource.data.white.id != request.resource.data.black.id;
        }

        allow create: if isSignedIn() && ownsLeague() && validateMatchData();
        allow delete: if isSignedIn() && ownsLeague();
        allow update: if isSignedIn() && ownsLeague();
        allow read: if true;
      }
    }
  }
}